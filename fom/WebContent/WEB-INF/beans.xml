<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


<context:component-scan base-package="fom"/>
<!-- <tx:annotation-driven transaction-manager="transactionManager"/> transaction-manager 이름이 transactionManager인 경우에는
<tx:annotation-driven/> 로만 표기해도 된다.--> 
<tx:annotation-driven/>

<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">

	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	<property name="username" value="SYSTEM"/>
	<property name="password" value="admin1234"/>
	
</bean>

<bean id="jdbcTemplate" class ="org.springframework.jdbc.core.JdbcTemplate">
	<constructor-arg ref="dataSource" />
</bean>

<!-- query 연동할 함수, 프로시저 등등을 호출할 수 있다. select -->
<bean class="org.springframework.jdbc.core.simple.SimpleJdbcCall">
	<constructor-arg>
		<ref bean="jdbcTemplate"/>
	</constructor-arg>
</bean>

<!-- query 연동할 함수, 프로시저 등등을 호출할 수 있다. insert,delete,update -->
<bean class="org.springframework.jdbc.core.simple.SimpleJdbcInsert">
	<constructor-arg>
		<ref bean="jdbcTemplate"/>
	</constructor-arg>
</bean>

<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 	<constructor-arg ref="dataSource" />
</bean>





</beans>